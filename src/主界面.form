覆写方法 正在载入()
   父对象.正在载入()
   变量 主题逻辑 为 逻辑型 = 共享数据.取逻辑("主题真假")
   如果 主题逻辑 == 假 则
      主界面.主题 = R.style.liang
      状态栏工具类.置状态栏颜色及透明度(本对象,"#FFFFFFFF",0)
      主界面.状态栏字体黑色 = 真
   否则
      主界面.主题 = R.style.an
      状态栏工具类.置状态栏颜色及透明度(本对象,"#FF212121",0)
      主界面.状态栏字体黑色 = 假
   结束 如果
结束 方法

覆写方法 载入布局完毕()
   父对象.载入布局完毕()
   线性布局2.宽度 = 像素单位操作.px2dip(本对象,系统操作.取屏幕宽度(本对象) / 3)
结束 方法

事件 主界面:按下某键(键代码 为 整数型) 为 逻辑型
   如果 键代码 == 返回键 则
      返回桌面()
   结束 如果
   返回 真
结束 事件

/*
*分页布局代码处理开始
*/
事件 分页布局1:页面被滑动(索引 为 整数型,移量百分比 为 浮点数型,偏移量数值 为 整数型)
   变量 px屏幕宽 为 整数型 = 系统操作.取屏幕宽度(本对象) / 3
   变量 px偏移宽 为 整数型 = 偏移量数值 / 3
   如果 索引 == 0 则
      线性布局2.X偏移 = px偏移宽
   否则
      线性布局2.X偏移 = px屏幕宽 * 索引 + px偏移宽
   结束 如果
结束 事件

事件 分页布局1:页面被改变(索引 为 整数型)
   如果 索引 == 0 则
      主界面.标题 = "首页"
      文本框1.字体颜色 = "#FF81AFD2"
      文本框2.字体颜色 = "#FF5A5A5C"
      文本框3.字体颜色 = "#FF5A5A5C"
   结束 如果
   如果 索引 == 1 则
      主界面.标题 = "管理"
      文本框1.字体颜色 = "#FF5A5A5C"
      文本框2.字体颜色 = "#FF81AFD2"
      文本框3.字体颜色 = "#FF5A5A5C"
   结束 如果
   如果 索引 == 2 则
      主界面.标题 = "设置"
      文本框1.字体颜色 = "#FF5A5A5C"
      文本框2.字体颜色 = "#FF5A5A5C"
      文本框3.字体颜色 = "#FF81AFD2"
   结束 如果
结束 事件

事件 文本框1:被单击()
   分页布局1.显示页面(0)
结束 事件

事件 文本框2:被单击()
   分页布局1.显示页面(1)
结束 事件

事件 文本框3:被单击()
   分页布局1.显示页面(2)
结束 事件
/*
*分页布局代码处理结束
*/

/*
*首页页面代码开始
*/
事件 文本框18:被单击()
   线报()
结束 事件

事件 文本框20:被单击()
   软件()
结束 事件

//加载线报列表方法
方法 线报()
   T1后端云1.初始化("36de8151738f84c9","ff0941e22b20ccf25eea8eed4b6fa2d6")
   T1后端云1.获取云文档("rzpxeaaq")
   变量 进度对话框 为 进度对话框 = 创建 进度对话框(本对象)
   进度对话框.标题 = "线报"
   进度对话框.信息 = "加载中，请稍候..."
   进度对话框.显示()
   事件 T1后端云1:获取云文档成功(结果 为 文本型)
      进度对话框.关闭()
      列表框2.清除项目()
      变量 线报json 为 JSON对象 = 创建 JSON对象(结果)
      变量 线报数据 为 文本型 = 线报json.取文本("text")
      变量 线报数组 为 文本型[] = 文本操作.分割文本(线报数据,"\n")
      计次循环(线报数组.长度,计次)
         列表框2.添加项目(线报数组[计次])
      结束 循环
      事件 列表框2:项目被单击(索引 为 整数型)
         变量 线报链接 为 文本型 = 文本操作.截取文本(列表框2.取项目(索引),"(",")")
         系统操作.置剪切板文本(本对象,线报链接)
         信息框("已复制活动地址" + 线报链接 + "\n" + "请到浏览器粘贴浏览")
      结束 事件
   结束 事件
   事件 T1后端云1:获取云文档失败(结果 为 文本型)
      进度对话框.关闭()
      信息框("线报","线报加载失败")
   结束 事件
结束 方法

//加载软件列表方法
方法 软件()
   T1后端云1.初始化("36de8151738f84c9","ff0941e22b20ccf25eea8eed4b6fa2d6")
   T1后端云1.获取云文档("rzppemp")
   变量 进度对话框 为 进度对话框 = 创建 进度对话框(本对象)
   进度对话框.标题 = "软件"
   进度对话框.信息 = "加载中，请稍候..."
   进度对话框.显示()
   事件 T1后端云1:获取云文档成功(结果 为 文本型)
      进度对话框.关闭()
      列表框2.清除项目()
      变量 软件json 为 JSON对象 = 创建 JSON对象(结果)
      变量 软件数据 为 文本型 = 软件json.取文本("text")
      变量 软件数组 为 文本型[] = 文本操作.分割文本(软件数据,"\n")
      计次循环(软件数组.长度,计次)
         列表框2.添加项目(软件数组[计次])
      结束 循环
      事件 列表框2:项目被单击(索引 为 整数型)
         变量 软件链接 为 文本型 = 文本操作.截取文本(列表框2.取项目(索引),"(",")")
         系统操作.置剪切板文本(本对象,软件链接)
         信息框("已复制软件地址" + 软件链接 + "\n" + "请到浏览器粘贴浏览")
      结束 事件
   结束 事件
   事件 T1后端云1:获取云文档失败(结果 为 文本型)
      进度对话框.关闭()
      信息框("软件","软件加载失败")
   结束 事件
结束 方法
/*
*首页页面代码结束
*/

/*
*管理页面代码开始
*/
//QQ盗音列表单击事件
事件 文本框4:被单击()
   信息框("只显示slk、mp3、amr、silk格式文件")
   QQ盗音()
结束 事件

//微信盗音列表单击事件
事件 文本框5:被单击()
   信息框("只显示slk、amr、silk格式文件")
   微信盗音()
结束 事件

//加载QQ盗音列表方法
方法 QQ盗音()
   变量 QQ盗音适配器 为 适配器
   变量 QQ盗音集合 为 集合 = 创建 集合()
   变量 QQ盗音路径 为 文本型 = 存储卡操作.取存储卡路径() + "/Android/data/com.tencent.mobileqq/Tencent/QQfile_recv/"
   变量 QQ盗音目录 为 文本型[] = 文件操作.取子文件列表(QQ盗音路径,文件排序_时间排序,真)
   计次循环(QQ盗音目录.长度,计次)
      如果 QQ盗音目录[计次].结尾为(".slk") 或 QQ盗音目录[计次].结尾为(".mp3") 或 QQ盗音目录[计次].结尾为(".amr") 或 QQ盗音目录[计次].结尾为(".silk") 则
         QQ盗音集合.添加项目(QQ盗音目录[计次])
      结束 如果
   结束 循环
   QQ盗音适配器 = 创建 适配器(QQ盗音集合)
   列表框1.置适配器(QQ盗音适配器)
   事件 QQ盗音适配器:加载项目(索引 为 整数型) 为 组件容器
      变量 QQ盗音列表布局 为 组件容器 = 管理QQ盗音微信盗音列表布局()
      变量 QQ盗音文本框1 为 文本框 = QQ盗音列表布局.取组件("文本框1")
      变量 QQ盗音文本框2 为 文本框 = QQ盗音列表布局.取组件("文本框2")
      QQ盗音文本框1.内容 = 文件操作.取文件前缀名(QQ盗音集合.取文本项目(索引))
      QQ盗音文本框2.内容 = QQ盗音集合.取文本项目(索引)
      返回(QQ盗音列表布局)
   结束 事件
   事件 列表框1:项目被单击(索引 为 整数型)
      变量 文件名称 为 文本型 = "名称：" + 文件操作.取文件前缀名(QQ盗音集合.取文本项目(索引)) + "." + 文件操作.取文件后缀名(QQ盗音集合.取文本项目(索引))
      变量 文件路径 为 文本型 = "路径：" + QQ盗音集合.取文本项目(索引)
      变量 文件类型 为 文本型 = "类型：" + 文件操作.取文件后缀名(QQ盗音集合.取文本项目(索引)) + "文件"
      变量 文件SHA1 为 文本型 = "SHA1：" + 文件操作.取文件SHA1(QQ盗音集合.取文本项目(索引))
      变量 文件CRC32 为 文本型 = "CRC32：" + 文件操作.取文件CRC32(QQ盗音集合.取文本项目(索引))
      变量 文件MD5 为 文本型 = "MD5：" + 文件操作.取文件MD5(QQ盗音集合.取文本项目(索引))
      变量 文件大小 为 文本型 = "文件大小：" + 文件操作.取文件大小(QQ盗音集合.取文本项目(索引)) / 1024 + "Kb"
      变量 文件修改时间 为 文本型 = "修改时间：" + 文件操作.取文件修改时间(QQ盗音集合.取文本项目(索引))
      变量 文件属性 为 文本型 = 文件名称 + "\n\n" + 文件路径 + "\n\n" + 文件类型 + "\n\n" + 文件SHA1 + "\n\n" + 文件CRC32 + "\n\n" + 文件MD5 + "\n\n" + 文件大小 + "\n\n" + 文件修改时间 + "\n\n" + "有些可以播放，有些不可以" + "\n\n" + "使用搜索文件可以将列表滚动到你输入的文件名位置处，前提是输入正确的文件名(不需要输入后缀)。输入错误或不输入文件名将会滚动到列表最顶部(严格区分大小写和空格还有符号)"
      音乐播放器1.置播放路径(QQ盗音集合.取文本项目(索引),真)
      变量 文件属性对话框 为 对话框 = 创建 对话框(本对象)
      文件属性对话框.标题 = "属性"
      文件属性对话框.信息 = 文件属性
      文件属性对话框.按钮1 = "确定"
      文件属性对话框.按钮2 = "搜索文件"
      文件属性对话框.显示()
      事件 文件属性对话框:按钮1被单击()
         音乐播放器1.停止播放()
         文件属性对话框.关闭()
      结束 事件
      事件 文件属性对话框:按钮2被单击()
         变量 搜索对话框 为 输入对话框 = 创建 输入对话框(本对象)
         搜索对话框.标题 = "搜索文件"
         搜索对话框.提示文本 = "输入要搜索的文件名字"
         搜索对话框.按钮1 = "搜索"
         搜索对话框.按钮2 = "取消"
         搜索对话框.显示()
         事件 搜索对话框:按钮1被单击()
            列表框1.滚动至(QQ盗音集合.查找项目索引(QQ盗音路径 + 搜索对话框.内容 + "." + 文件操作.取文件后缀名(QQ盗音集合.取文本项目(索引))))
            音乐播放器1.停止播放()
            搜索对话框.关闭()
         结束 事件
         事件 搜索对话框:按钮2被单击()
            音乐播放器1.停止播放()
            搜索对话框.关闭()
         结束 事件
         文件属性对话框.关闭()
      结束 事件
   结束 事件
   事件 列表框1:项目被长按(索引 为 整数型)
      变量 操作对话框 为 对话框 = 创建 对话框(本对象)
      操作对话框.标题 = "选择操作"
      操作对话框.信息 = "文件：" + 文件操作.取文件前缀名(QQ盗音集合.取文本项目(索引)) + "." + 文件操作.取文件后缀名(QQ盗音集合.取文本项目(索引))
      操作对话框.按钮1 = "备份"
      操作对话框.按钮2 = "删除"
      操作对话框.按钮3 = "重命名"
      操作对话框.显示()
      事件 操作对话框:按钮1被单击()
         容错处理
            文件操作.复制文件(QQ盗音集合.取文本项目(索引),存储卡操作.取存储卡路径() + "/盗音大师备份/qq备份/" + 文件操作.取文件前缀名(QQ盗音集合.取文本项目(索引)) + "." + 文件操作.取文件后缀名(QQ盗音集合.取文本项目(索引)))
            信息框("已备份到根目录 盗音大师备份 文件夹")
         俘获(异常)
            信息框("异常",异常)
         结束 容错
         操作对话框.关闭()
      结束 事件
      事件 操作对话框:按钮2被单击()
         容错处理
            文件操作.删除文件(QQ盗音集合.取文本项目(索引))
            悬浮窗1.关闭()
            悬浮窗2.关闭()
            悬浮窗3.关闭()
            弹出提示("删除成功")
            主界面.重启窗口()
         俘获(异常)
            信息框("异常",异常)
         结束 容错
         操作对话框.关闭()
      结束 事件
      事件 操作对话框:按钮3被单击()
         容错处理
            变量 重命名对话框 为 输入对话框 = 创建 输入对话框(本对象)
            重命名对话框.标题 = "重命名"
            重命名对话框.按钮1 = "确定"
            重命名对话框.按钮2 = "取消"
            重命名对话框.内容 = 文件操作.取文件前缀名(QQ盗音集合.取文本项目(索引))
            重命名对话框.显示()
            事件 重命名对话框:按钮1被单击()
               文件操作.重命名文件(QQ盗音集合.取文本项目(索引),QQ盗音路径 + 重命名对话框.内容 + "." + 文件操作.取文件后缀名(QQ盗音集合.取文本项目(索引)))
               主界面.重启窗口()
               悬浮窗1.关闭()
               悬浮窗2.关闭()
               悬浮窗3.关闭()
               弹出提示("重命名成功")
               重命名对话框.关闭()
            结束 事件
            事件 重命名对话框:按钮2被单击()
               重命名对话框.关闭()
            结束 事件
         俘获(异常)
            信息框("异常",异常)
         结束 容错
         操作对话框.关闭()
      结束 事件
   结束 事件
结束 方法

//加载微信盗音列表方法
方法 微信盗音()
   容错处理
      变量 微信编码文本 为 文本型 = 文件操作.读入文本文件(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/wx.ini")
      变量 微信盗音适配器 为 适配器
      变量 微信盗音集合 为 集合 = 创建 集合()
      变量 微信收藏路径 为 文本型 = 存储卡操作.取存储卡路径() + "/Android/data/com.tencent.mm/MicroMsg/" + 微信编码文本 + "/favorite/"
      变量 二级选择路径 为 文本型[] = 文件操作.取子文件列表(微信收藏路径)
      计次循环(二级选择路径.长度,计次)
         变量 循环文件列表 为 文本型[] = 文件操作.取子文件列表(二级选择路径[计次])
         变量 列表文本 为 文本型 = 到文本(循环文件列表)
         如果 列表文本.包含(".silk") 或 列表文本.包含(".slk") 或 列表文本.包含(".amr") 则
            变量 每个文件 为 文本型 = 文本操作.截取文本(列表文本,"[","]")
            微信盗音集合.添加项目(每个文件)
         结束 如果
      结束 循环
      微信盗音适配器 = 创建 适配器(微信盗音集合)
      列表框1.置适配器(微信盗音适配器)
      事件 微信盗音适配器:加载项目(索引 为 整数型) 为 组件容器
         变量 微信盗音列表布局 为 组件容器 = 管理QQ盗音微信盗音列表布局()
         变量 微信盗音文本框1 为 文本框 = 微信盗音列表布局.取组件("文本框1")
         变量 微信盗音文本框2 为 文本框 = 微信盗音列表布局.取组件("文本框2")
         微信盗音文本框1.内容 = 文件操作.取文件前缀名(微信盗音集合.取文本项目(索引))
         微信盗音文本框2.内容 = "微信不支持查看路径"
         返回(微信盗音列表布局)
      结束 事件
      事件 列表框1:项目被单击(索引 为 整数型)
         变量 文件名称 为 文本型 = "名称：" + 文件操作.取文件前缀名(微信盗音集合.取文本项目(索引)) + "." + 文件操作.取文件后缀名(微信盗音集合.取文本项目(索引))
         变量 文件路径 为 文本型 = "路径：微信不支持查看路径"
         变量 文件类型 为 文本型 = "类型：" + 文件操作.取文件后缀名(微信盗音集合.取文本项目(索引)) + "文件"
         变量 文件SHA1 为 文本型 = "SHA1：" + 文件操作.取文件SHA1(微信盗音集合.取文本项目(索引))
         变量 文件CRC32 为 文本型 = "CRC32：" + 文件操作.取文件CRC32(微信盗音集合.取文本项目(索引))
         变量 文件MD5 为 文本型 = "MD5：" + 文件操作.取文件MD5(微信盗音集合.取文本项目(索引))
         变量 文件大小 为 文本型 = "文件大小：" + 文件操作.取文件大小(微信盗音集合.取文本项目(索引)) / 1024 + "Kb"
         变量 文件修改时间 为 文本型 = "修改时间：" + 文件操作.取文件修改时间(微信盗音集合.取文本项目(索引))
         变量 文件属性 为 文本型 = 文件名称 + "\n\n" + 文件路径 + "\n\n" + 文件类型 + "\n\n" + 文件SHA1 + "\n\n" + 文件CRC32 + "\n\n" + 文件MD5 + "\n\n" + 文件大小 + "\n\n" + 文件修改时间
         变量 文件属性对话框 为 对话框 = 创建 对话框(本对象)
         文件属性对话框.标题 = "属性"
         文件属性对话框.信息 = 文件属性
         文件属性对话框.按钮1 = "确定"
         文件属性对话框.显示()
         事件 文件属性对话框:按钮1被单击()
            文件属性对话框.关闭()
         结束 事件
      结束 事件
      事件 列表框1:项目被长按(索引 为 整数型)
         变量 操作对话框 为 对话框 = 创建 对话框(本对象)
         操作对话框.标题 = "选择操作"
         操作对话框.信息 = "文件：" + 文件操作.取文件前缀名(微信盗音集合.取文本项目(索引)) + "." + 文件操作.取文件后缀名(微信盗音集合.取文本项目(索引))
         操作对话框.按钮1 = "备份"
         操作对话框.按钮2 = "删除"
         操作对话框.按钮3 = "重命名"
         操作对话框.显示()
         事件 操作对话框:按钮1被单击()
            容错处理
               文件操作.复制文件(微信盗音集合.取文本项目(索引),存储卡操作.取存储卡路径() + "/盗音大师备份/wx备份/" + 文件操作.取文件前缀名(微信盗音集合.取文本项目(索引)) + "." + 文件操作.取文件后缀名(微信盗音集合.取文本项目(索引)))
               信息框("已备份到根目录 盗音大师备份 文件夹")
            俘获(异常)
               信息框("异常",异常)
            结束 容错
            操作对话框.关闭()
         结束 事件
         事件 操作对话框:按钮2被单击()
            容错处理
               文件操作.删除文件(微信盗音集合.取文本项目(索引))
               悬浮窗1.关闭()
               悬浮窗2.关闭()
               悬浮窗3.关闭()
               弹出提示("删除成功")
               主界面.重启窗口()
            俘获(异常)
               信息框("异常",异常)
            结束 容错
            操作对话框.关闭()
         结束 事件
         事件 操作对话框:按钮3被单击()
            容错处理
               变量 重命名对话框 为 输入对话框 = 创建 输入对话框(本对象)
               重命名对话框.标题 = "重命名"
               重命名对话框.按钮1 = "确定"
               重命名对话框.按钮2 = "取消"
               重命名对话框.内容 = 文件操作.取文件前缀名(微信盗音集合.取文本项目(索引))
               重命名对话框.显示()
               事件 重命名对话框:按钮1被单击()
                  文件操作.移动文件(微信盗音集合.取文本项目(索引),微信收藏路径 + 时间操作.取时间戳() + "/" + 重命名对话框.内容 + "." + 文件操作.取文件后缀名(微信盗音集合.取文本项目(索引)))
                  主界面.重启窗口()
                  悬浮窗1.关闭()
                  悬浮窗2.关闭()
                  悬浮窗3.关闭()
                  弹出提示("重命名成功")
                  重命名对话框.关闭()
               结束 事件
               事件 重命名对话框:按钮2被单击()
                  重命名对话框.关闭()
               结束 事件
            俘获(异常)
               信息框("异常",异常)
            结束 容错
            操作对话框.关闭()
         结束 事件
      结束 事件
   俘获(异常)
      信息框("异常","1.未绑定微信编码。" + "\n\n" + "2.未收藏别人语音。" + "\n\n" + "3.绑定的编码错了。")
   结束 容错
结束 方法

//以下为布局代码
布局 管理QQ盗音微信盗音列表布局() = {
   相对布局,
   id=1,
   名称="相对布局1",
   宽度="-1",
   高度="48"   {
      文本框,
      id=2,
      位于父布局中间=真,
      内容="文本框1",
      单行显示=真,
      名称="文本框1",
      省略显示=1,
      字体大小=16,
      宽度="-2",
      最大显示行数=1,
      高度="-2"
   },
   {
      文本框,
      id=3,
      位于某组件之下=2,
      位于父布局中间=真,
      内容="文本框2",
      单行显示=真,
      名称="文本框2",
      省略显示=1,
      字体大小=8,
      显示行数=1,
      宽度="-2",
      最大显示行数=1,
      高度="-2"
   }
}
/*
*管理页面代码结束
*/

/*
*设置页面代码开始
*/
事件 线性布局7:被单击()//绑定QQ
   变量 绑定QQ对话框 为 输入对话框 = 创建 输入对话框(本对象)
   绑定QQ对话框.标题 = "绑定QQ"
   绑定QQ对话框.提示文本 = "输入你正在使用的QQ"
   绑定QQ对话框.按钮1 = "绑定"
   绑定QQ对话框.按钮2 = "取消"
   绑定QQ对话框.显示()
   事件 绑定QQ对话框:按钮1被单击()
      文件操作.写出文本文件(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/qq.ini",绑定QQ对话框.内容)
      信息框(绑定QQ对话框.内容)
      绑定QQ对话框.关闭()
   结束 事件
   事件 绑定QQ对话框:按钮2被单击()
      绑定QQ对话框.关闭()
   结束 事件
结束 事件

事件 线性布局8:被单击()//绑定微信
   变量 绑定微信编码对话框 为 对话框 = 创建 对话框(本对象)
   变量 绑定微信编码容器 为 组件容器 = 绑定微信编码()
   绑定微信编码对话框.标题 = "选择最长的那个"
   绑定微信编码对话框.组件 = 绑定微信编码容器
   变量 绑定微信编码列表框 为 列表框 = 绑定微信编码容器.取组件("列表框1")
   变量 获取微信编码文件路径 为 文本型[] = 文件操作.取子文件列表(存储卡操作.取存储卡路径() + "/Android/data/com.tencent.mm/MicroMsg/")
   计次循环(获取微信编码文件路径.长度,计次)
      绑定微信编码列表框.添加项目(文件操作.取文件前缀名(获取微信编码文件路径[计次]))
   结束 循环
   绑定微信编码对话框.显示()
   事件 绑定微信编码列表框:项目被单击(索引 为 整数型)
      信息框(文件操作.取文件前缀名(获取微信编码文件路径[索引]))
      文件操作.写出文本文件(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/wx.ini",文件操作.取文件前缀名(获取微信编码文件路径[索引]))
      绑定微信编码对话框.关闭()
   结束 事件
结束 事件

事件 线性布局9:被单击()//经典名言
   T1后端云1.初始化("36de8151738f84c9","ff0941e22b20ccf25eea8eed4b6fa2d6")
   T1后端云1.获取云文档("rzmterrm")
   变量 进度对话框 为 进度对话框 = 创建 进度对话框(本对象)
   进度对话框.标题 = "经典名言"
   进度对话框.信息 = "加载中，请稍候..."
   进度对话框.显示()
   事件 T1后端云1:获取云文档成功(结果 为 文本型)
      进度对话框.关闭()
      变量 名言json 为 JSON对象 = 创建 JSON对象(结果)
      变量 名言数据 为 文本型 = 名言json.取文本("text")
      变量 名言数组 为 文本型[] = 文本操作.分割文本(名言数据,"\n")
      变量 名言数组总数 为 整数型 = 名言数组.长度
      变量 名言数组取随机数 为 整数型 = 算术运算.取随机数(0,名言数组总数 - 1)
      信息框("经典名言",名言数组[名言数组取随机数])
   结束 事件
   事件 T1后端云1:获取云文档失败(结果 为 文本型)
      进度对话框.关闭()
      信息框("经典名言","经典名言加载失败")
   结束 事件
结束 事件

事件 线性布局10:被单击()//开发致谢
   T1后端云1.初始化("36de8151738f84c9","ff0941e22b20ccf25eea8eed4b6fa2d6")
   T1后端云1.获取云文档("rzxxeax")
   变量 进度对话框 为 进度对话框 = 创建 进度对话框(本对象)
   进度对话框.标题 = "开发致谢"
   进度对话框.信息 = "加载中，请稍候..."
   进度对话框.显示()
   事件 T1后端云1:获取云文档成功(结果 为 文本型)
      进度对话框.关闭()
      变量 致谢json 为 JSON对象 = 创建 JSON对象(结果)
      变量 致谢数据 为 文本型 = 致谢json.取文本("text")
      信息框("开发致谢",致谢数据)
   结束 事件
   事件 T1后端云1:获取云文档失败(结果 为 文本型)
      进度对话框.关闭()
      信息框("开发致谢","开发致谢加载失败")
   结束 事件
结束 事件

事件 线性布局11:被单击()//导入语音
   变量 是否绑定了qq号码 为 逻辑型 = 文件操作.文件是否存在(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/qq.ini")
   变量 是否绑定了微信编码 为 逻辑型 = 文件操作.文件是否存在(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/wx.ini")
   如果 是否绑定了微信编码 == 真 且 是否绑定了qq号码 == 真 则
      意图.选择文件(本对象)
      事件 主界面:窗口回调(请求码 为 整数型,结果码 为 整数型,数据 为 意图)
         变量 回调文件路径 为 文本型 = 意图.解析文件地址(本对象,数据)
         变量 微信编码文本 为 文本型 = 文件操作.读入文本文件(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/wx.ini")
         变量 QQ盗音列表路径 为 文本型 = 存储卡操作.取存储卡路径() + "/Android/data/com.tencent.mobileqq/Tencent/QQfile_recv/"
         变量 微信盗音列表路径 为 文本型 = 存储卡操作.取存储卡路径() + "/Android/data/com.tencent.mm/MicroMsg/" + 微信编码文本 + "/favorite/"
         变量 回调询问对话框 为 对话框 = 创建 对话框(本对象)
         回调询问对话框.标题 = "导入到哪里"
         回调询问对话框.信息 = "文件：" + 回调文件路径
         回调询问对话框.按钮1 = "Q Q盗音列表"
         回调询问对话框.按钮2 = "微信盗音列表"
         如果 回调文件路径.包含(".mp3") 或 回调文件路径.包含(".slk") 或 回调文件路径.包含(".acc") 或 回调文件路径.包含(".amr") 或 回调文件路径.包含(".silk") 则
            回调询问对话框.显示()
            事件 回调询问对话框:按钮1被单击()
               文件操作.复制文件(回调文件路径,QQ盗音列表路径 + 文件操作.取文件前缀名(回调文件路径) + "." + 文件操作.取文件后缀名(回调文件路径))
               信息框("导入成功")
               回调询问对话框.关闭()
            结束 事件
            事件 回调询问对话框:按钮2被单击()
               文件操作.复制文件(回调文件路径,微信盗音列表路径 + 时间操作.取时间戳() + "/" + 文件操作.取文件前缀名(回调文件路径) + "." + 文件操作.取文件后缀名(回调文件路径))
               信息框("导入成功")
               回调询问对话框.关闭()
            结束 事件
         否则
            信息框("不支持此类型文件")
         结束 如果
      结束 事件
   否则
      信息框("提示","未绑定qq号码或未绑定微信编码")
   结束 如果
结束 事件

事件 线性布局12:被单击()//主题切换
   变量 切换 为 逻辑型 = 共享数据.取逻辑("主题真假")
   如果 切换 == 真 则
      共享数据.置逻辑("主题真假",假)
      切换窗口(创建 启动窗口(),淡入淡出)
      悬浮窗1.关闭()
      悬浮窗2.关闭()
      悬浮窗3.关闭()
      关闭窗口()
   否则 
      共享数据.置逻辑("主题真假",真)
      切换窗口(创建 启动窗口(),淡入淡出)
      悬浮窗1.关闭()
      悬浮窗2.关闭()
      悬浮窗3.关闭()
      关闭窗口()
   结束 如果
结束 事件

事件 线性布局13:被单击()//清理缓存
   变量 是否绑定了qq号码 为 逻辑型 = 文件操作.文件是否存在(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/qq.ini")
   变量 是否绑定了微信编码 为 逻辑型 = 文件操作.文件是否存在(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/wx.ini")
   如果 是否绑定了微信编码 == 真 且 是否绑定了qq号码 == 真 则
      变量 清理缓存对话框 为 对话框 = 创建 对话框(本对象)
      变量 清理qq路径 为 文本型 = 存储卡操作.取存储卡路径() + "/Android/data/com.tencent.mobileqq/Tencent/MobileQQ/" + 文件操作.读入文本文件(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/qq.ini") + "/ptt/"
      变量 清理微信路径 为 文本型 = 存储卡操作.取存储卡路径() + "/Android/data/com.tencent.mm/MicroMsg/" + 文件操作.读入文本文件(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/wx.ini") + "/voice2/"
      清理缓存对话框.标题 = "清理缓存"
      清理缓存对话框.信息 = "清理QQ缓存说明：本来可以正常使用，然后突然发送语音对方听不到替换之后的语音" + "\n\n" + "清理微信缓存说明：本来可以正常使用，然后突然发送语音对方听不到替换之后的语音，清理之后可能会导致微信之前收到的语音播放失败" + "\n\n" + "请绑定好qq号码、微信编码后再清理"
      清理缓存对话框.按钮1 = "清理QQ缓存"
      清理缓存对话框.按钮2 = "清理微信缓存"
      事件 清理缓存对话框:按钮1被单击()
         文件操作.删除文件(清理qq路径)
         信息框("清理成功")
      结束 事件
      事件 清理缓存对话框:按钮2被单击()
         文件操作.删除文件(清理微信路径)
         信息框("清理成功")
      结束 事件
      清理缓存对话框.显示()
   否则
      信息框("提示","未绑定qq号码或未绑定微信编码")
   结束 如果
结束 事件

事件 线性布局14:被单击()//分享软件
   变量 分享内容 为 文本型 = "分享一款超好玩的app\n它可以转发别人QQ和微信的语音，还有其他更多功能\n\nhttps://zhongcheng.lanzous.com/b01zybdmh 密码:6666"
   应用操作.一键分享(本对象,分享内容)
结束 事件

事件 线性布局15:被单击()//使用帮助
   切换窗口(创建 使用帮助(),淡入淡出)
结束 事件

事件 线性布局16:被单击()//关于
   切换窗口(创建 关于(),淡入淡出)
结束 事件

事件 线性布局17:被单击()//退出软件
   关闭程序()
结束 事件

//以下为布局代码
布局 绑定微信编码() = {
   列表框,
   id=1,
   名称="列表框1",
   宽度="-1",
   支持快速滚动=真,
   高度="-2"
}
/*
*设置页面代码结束
*/

/*
*右下角图标按钮代码开始
*/
事件 圆形图片框2:被单击()
   文件操作.创建目录(存储卡操作.取存储卡路径() + "/盗音大师内录")
   变量 qq 为 文本型 = 文件操作.读入文本文件(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/qq.ini")
   变量 微信 为 文本型 = 文件操作.读入文本文件(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/wx.ini")
   变量 启动悬浮窗 为 对话框 = 创建 对话框(本对象)
   启动悬浮窗.标题 = "启动悬浮窗"
   启动悬浮窗.信息 = "选择要启动的功能悬浮窗" + "\n\n" + "内录规则：已在手机根目录创建 盗音大师内录 文件夹，把可播放音频文件(aac、wma、amr、wav、mp3)添加到该文件夹即可加载出来，点击悬浮窗内音频文件会暂停两秒以便您点击qq录音或按住微信录音" + "\n\n" + "绑定的qq：" + qq + "\n" + "绑定的微信编码：" + 微信
   启动悬浮窗.按钮1 = "QQ"
   启动悬浮窗.按钮2 = "微信"
   启动悬浮窗.按钮3 = "内录"
   启动悬浮窗.显示()
   事件 启动悬浮窗:按钮1被单击()
      //QQ
      启动悬浮窗.关闭()
      如果 权限申请1.是否有悬浮窗权限() == 假 则
         变量 权限申请对话框 为 对话框 = 创建 对话框(本对象)
         权限申请对话框.标题 = "悬浮窗权限申请"
         权限申请对话框.信息 = "该功能需要开启悬浮窗权限才能使用"
         权限申请对话框.按钮1 = "前往开启"
         权限申请对话框.显示()
         事件 权限申请对话框:按钮1被单击()
            权限申请1.申请悬浮窗权限()
            权限申请对话框.关闭()
         结束 事件
      否则
         悬浮球1()
      结束 如果
   结束 事件
   事件 启动悬浮窗:按钮2被单击()
      //微信
      启动悬浮窗.关闭()
      如果 权限申请1.是否有悬浮窗权限() == 假 则
         变量 权限申请对话框 为 对话框 = 创建 对话框(本对象)
         权限申请对话框.标题 = "悬浮窗权限申请"
         权限申请对话框.信息 = "该功能需要开启悬浮窗权限才能使用"
         权限申请对话框.按钮1 = "前往开启"
         权限申请对话框.显示()
         事件 权限申请对话框:按钮1被单击()
            权限申请1.申请悬浮窗权限()
            权限申请对话框.关闭()
         结束 事件
      否则
         悬浮球2()
      结束 如果
   结束 事件
   事件 启动悬浮窗:按钮3被单击()
      //内录
      启动悬浮窗.关闭()
      如果 权限申请1.是否有悬浮窗权限() == 假 则
         变量 权限申请对话框 为 对话框 = 创建 对话框(本对象)
         权限申请对话框.标题 = "悬浮窗权限申请"
         权限申请对话框.信息 = "该功能需要开启悬浮窗权限才能使用"
         权限申请对话框.按钮1 = "前往开启"
         权限申请对话框.显示()
         事件 权限申请对话框:按钮1被单击()
            权限申请1.申请悬浮窗权限()
            权限申请对话框.关闭()
         结束 事件
      否则
         悬浮球3()
      结束 如果
   结束 事件
结束 事件

事件 圆形图片框2:被长按()
   变量 qq 为 文本型 = 文件操作.读入文本文件(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/qq.ini")
   信息框("镇楼音","镇楼音规则：镇楼音替换不支持长语音且只能是qq的语音slk文件(注意是slk语音文件，其他的文件不会显示)，替换镇楼音的语音需要先去收藏别人的语音才能替换，如果替换不了请清理QQ缓存(不是你手机QQ的缓存，是盗音大师设置里的清理缓存)，详细请到哔哩哔哩搜索 盗音大师使用教程 查看" + "\n" + "qq:" + qq)
   如果 权限申请1.是否有悬浮窗权限() == 假 则
      变量 权限申请对话框 为 对话框 = 创建 对话框(本对象)
      权限申请对话框.标题 = "悬浮窗权限申请"
      权限申请对话框.信息 = "该功能需要开启悬浮窗权限才能使用"
      权限申请对话框.按钮1 = "前往开启"
      权限申请对话框.显示()
      事件 权限申请对话框:按钮1被单击()
         权限申请1.申请悬浮窗权限()
         权限申请对话框.关闭()
      结束 事件
   否则
      悬浮球4()
   结束 如果
结束 事件

方法 悬浮球1()//QQ盗音悬浮球
   变量 悬浮球布局1 为 组件容器 = 悬浮球布局()
   悬浮窗1.组件 = 悬浮球布局1
   变量 悬浮球控件1 为 圆形图片框 = 悬浮球布局1.取组件("圆形图片框1")
   事件 悬浮球控件1:被单击()
      悬浮窗1()
   结束 事件
   事件 悬浮球控件1:被长按()
      悬浮窗1.隐藏()
   结束 事件
   悬浮窗1.可否移动 = 真
   悬浮窗1.显示()
结束 方法

方法 悬浮窗1()//QQ盗音悬浮窗
   变量 悬浮窗布局1 为 组件容器 = 悬浮窗布局()
   悬浮窗1.组件 = 悬浮窗布局1
   变量 悬浮窗左上角 为 圆形图片框 = 悬浮窗布局1.取组件("圆形图片框1")
   变量 悬浮窗右上角 为 圆形图片框 = 悬浮窗布局1.取组件("圆形图片框2")
   事件 悬浮窗左上角:被单击()
      悬浮球1()
   结束 事件
   事件 悬浮窗右上角:被单击()
      悬浮球1()
   结束 事件
   变量 悬浮窗中间文本1 为 文本框 = 悬浮窗布局1.取组件("文本框1")
   悬浮窗中间文本1.内容 = "QQ盗音"
   变量 悬浮窗下面列表1 为 列表框 = 悬浮窗布局1.取组件("列表框1")
   变量 悬浮窗适配器1 为 适配器
   变量 悬浮窗集合1 为 集合 = 创建 集合()
   变量 Q盗路径 为 文本型 = 存储卡操作.取存储卡路径() + "/Android/data/com.tencent.mobileqq/Tencent/QQfile_recv/"
   变量 Q盗目录 为 文本型[] = 文件操作.取子文件列表(Q盗路径,文件排序_时间排序,真)
   计次循环(Q盗目录.长度, 计次)
      如果 Q盗目录[计次].结尾为(".slk") 或 Q盗目录[计次].结尾为(".mp3") 或 Q盗目录[计次].结尾为(".amr") 或 Q盗目录[计次].结尾为(".silk") 则
         悬浮窗集合1.添加项目(Q盗目录[计次])
      结束 如果
   结束 循环
   悬浮窗适配器1 = 创建 适配器(悬浮窗集合1)
   悬浮窗下面列表1.置适配器(悬浮窗适配器1)
   事件 悬浮窗适配器1:加载项目(索引 为 整数型) 为 组件容器
      变量 悬浮窗列表布局1 为 组件容器 = 悬浮窗列表布局()
      变量 悬浮窗列表布局文本框1 为 文本框 = 悬浮窗列表布局1.取组件("文本框1")
      悬浮窗列表布局文本框1.内容 = 文件操作.取文件前缀名(悬浮窗集合1.取文本项目(索引))
      返回(悬浮窗列表布局1)
   结束 事件
   事件 悬浮窗下面列表1:项目被单击(索引 为 整数型)
      容错处理
         变量 Q盗替换路径 为 文本型 = 存储卡路径 +  "/Android/data/com.tencent.mobileqq/Tencent/MobileQQ/%s/ptt/%s/%s"
         变量 qq号码 为 文本型 = 文件操作.读入文本文件(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/qq.ini")
         Q盗替换路径 = 格式化文本(Q盗替换路径,qq号码,时间操作.取格式时间("yyyyMM"),时间操作.取格式时间("d"))
         变量 Q盗替换路径_换 为 文本型[] = 文件操作.取子文件列表(Q盗替换路径,文件排序_时间排序,假)
         文件操作.复制文件(悬浮窗集合1.取文本项目(索引),Q盗替换路径_换[0])
         悬浮窗中间文本1.内容 = "可以发送了"
         变量 倒计时器1 为 倒计时器 = 创建 倒计时器(2000,1000)
         倒计时器1.开始倒计时()
         事件 倒计时器1:倒计时结束()
            悬浮窗中间文本1.内容 = "QQ盗音"
         结束 事件
      俘获(异常)
         悬浮窗中间文本1.内容 = "失败了"
         变量 倒计时器1 为 倒计时器 = 创建 倒计时器(2000,1000)
         倒计时器1.开始倒计时()
         事件 倒计时器1:倒计时结束()
            悬浮窗中间文本1.内容 = "QQ盗音"
         结束 事件
      结束 容错
   结束 事件
结束 方法

方法 悬浮球2()//微信盗音悬浮球
   变量 悬浮球布局2 为 组件容器 = 悬浮球布局()
   悬浮窗2.组件 = 悬浮球布局2
   变量 悬浮球控件2 为 圆形图片框 = 悬浮球布局2.取组件("圆形图片框1")
   事件 悬浮球控件2:被单击()
      悬浮窗2()
   结束 事件
   事件 悬浮球控件2:被长按()
      悬浮窗2.隐藏()
   结束 事件
   悬浮窗2.可否移动 = 真
   悬浮窗2.显示()
结束 方法

方法 悬浮窗2()//微信盗音悬浮窗
   变量 悬浮窗布局2 为 组件容器 = 悬浮窗布局()
   悬浮窗2.组件 = 悬浮窗布局2
   变量 悬浮窗左上角 为 圆形图片框 = 悬浮窗布局2.取组件("圆形图片框1")
   变量 悬浮窗右上角 为 圆形图片框 = 悬浮窗布局2.取组件("圆形图片框2")
   事件 悬浮窗左上角:被单击()
      悬浮球2()
   结束 事件
   事件 悬浮窗右上角:被单击()
      悬浮球2()
   结束 事件
   变量 悬浮窗中间文本2 为 文本框 = 悬浮窗布局2.取组件("文本框1")
   悬浮窗中间文本2.内容 = "微信盗音"
   变量 悬浮窗下面列表2 为 列表框 = 悬浮窗布局2.取组件("列表框1")
   变量 悬浮窗适配器2 为 适配器
   变量 悬浮窗集合2 为 集合 = 创建 集合()
   容错处理
      变量 微信编码文本 为 文本型 = 文件操作.读入文本文件(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/wx.ini")
      变量 微信收藏路径 为 文本型 = 存储卡操作.取存储卡路径() + "/Android/data/com.tencent.mm/MicroMsg/" + 微信编码文本 + "/favorite/"
      变量 二级选择路径 为 文本型[] = 文件操作.取子文件列表(微信收藏路径)
      计次循环(二级选择路径.长度,计次)
         变量 循环文件列表 为 文本型[] = 文件操作.取子文件列表(二级选择路径[计次])
         变量 列表文本 为 文本型 = 到文本(循环文件列表)
         如果 列表文本.包含(".silk") 或 列表文本.包含(".slk") 或 列表文本.包含(".amr") 则
            变量 每个文件 为 文本型 = 文本操作.截取文本(列表文本,"[","]")
            悬浮窗集合2.添加项目(每个文件)
         结束 如果
      结束 循环
      悬浮窗适配器2 = 创建 适配器(悬浮窗集合2)
      悬浮窗下面列表2.置适配器(悬浮窗适配器2)
      事件 悬浮窗适配器2:加载项目(索引 为 整数型) 为 组件容器
         变量 悬浮窗列表布局2 为 组件容器 = 悬浮窗列表布局()
         变量 悬浮窗列表布局文本框2 为 文本框 = 悬浮窗列表布局2.取组件("文本框1")
         悬浮窗列表布局文本框2.内容 = 文件操作.取文件前缀名(悬浮窗集合2.取文本项目(索引))
         返回(悬浮窗列表布局2)
      结束 事件
   俘获(异常)
      信息框("异常","1.未绑定微信编码。" + "\n\n" + "2.未收藏别人语音。" + "\n\n" + "3.绑定的编码错了。")
      悬浮窗2.隐藏()
   结束 容错
   事件 悬浮窗下面列表2:项目被单击(索引 为 整数型)
      容错处理
         变量 微信编码文本 为 文本型 = 文件操作.读入文本文件(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/wx.ini")
         变量 路径 为 文本型 = 存储卡操作.取存储卡路径() + "/Android/data/com.tencent.mm/MicroMsg/" + 微信编码文本 + "/voice2/"
         变量 选择路径 为 文本型[] = 文件操作.取子文件列表(路径,文件排序_时间排序,假)
         变量 选择路径2 为 文本型[] = 文件操作.取子文件列表(选择路径[0],文件排序_时间排序,假)
         变量 选择路径3 为 文本型[] = 文件操作.取子文件列表(选择路径2[0],文件排序_时间排序,假)
         文件操作.复制文件(悬浮窗集合2.取文本项目(索引), 选择路径3[0]) 
         悬浮窗中间文本2.内容 = "可以发送了"
         变量 倒计时器2 为 倒计时器 = 创建 倒计时器(2000,1000)
         倒计时器2.开始倒计时()
         事件 倒计时器2:倒计时结束()
            悬浮窗中间文本2.内容 = "微信盗音"
         结束 事件
      俘获(异常)
         悬浮窗中间文本2.内容 = "失败了"
         变量 倒计时器2 为 倒计时器 = 创建 倒计时器(2000,1000)
         倒计时器2.开始倒计时()
         事件 倒计时器2:倒计时结束()
            悬浮窗中间文本2.内容 = "微信盗音"
         结束 事件
      结束 容错
   结束 事件
结束 方法

方法 悬浮球3()//内录悬浮球
   变量 悬浮球布局3 为 组件容器 = 悬浮球布局()
   悬浮窗3.组件 = 悬浮球布局3
   变量 悬浮球控件3 为 圆形图片框 = 悬浮球布局3.取组件("圆形图片框1")
   事件 悬浮球控件3:被单击()
      悬浮窗3()
   结束 事件
   事件 悬浮球控件3:被长按()
      悬浮窗3.隐藏()
   结束 事件
   悬浮窗3.可否移动 = 真
   悬浮窗3.显示()
结束 方法

方法 悬浮窗3()//内录悬浮窗
   变量 悬浮窗布局3 为 组件容器 = 悬浮窗布局()
   悬浮窗3.组件 = 悬浮窗布局3
   变量 悬浮窗左上角 为 圆形图片框 = 悬浮窗布局3.取组件("圆形图片框1")
   变量 悬浮窗右上角 为 圆形图片框 = 悬浮窗布局3.取组件("圆形图片框2")
   事件 悬浮窗左上角:被单击()
      悬浮球3()
   结束 事件
   事件 悬浮窗右上角:被单击()
      悬浮球3()
   结束 事件
   变量 悬浮窗中间文本3 为 文本框 = 悬浮窗布局3.取组件("文本框1")
   悬浮窗中间文本3.内容 = "内录(点我可停止播放)"
   事件 悬浮窗中间文本3:被单击()
      音乐播放器1.停止播放()
   结束 事件
   变量 悬浮窗下面列表3 为 列表框 = 悬浮窗布局3.取组件("列表框1")
   变量 悬浮窗适配器3 为 适配器
   变量 悬浮窗集合3 为 集合 = 创建 集合()
   变量 内录路径 为 文本型 = 存储卡操作.取存储卡路径() + "/盗音大师内录/"
   变量 内录目录 为 文本型[] = 文件操作.取子文件列表(内录路径,文件排序_时间排序,真)
   计次循环(内录目录.长度, 计次)
      如果 内录目录[计次].结尾为(".wav") 或 内录目录[计次].结尾为(".mp3") 或 内录目录[计次].结尾为(".amr") 或 内录目录[计次].结尾为(".wma") 或 内录目录[计次].结尾为(".aac") 则
         悬浮窗集合3.添加项目(内录目录[计次])
      结束 如果
   结束 循环
   悬浮窗适配器3 = 创建 适配器(悬浮窗集合3)
   悬浮窗下面列表3.置适配器(悬浮窗适配器3)
   事件 悬浮窗适配器3:加载项目(索引 为 整数型) 为 组件容器
      变量 悬浮窗列表布局3 为 组件容器 = 悬浮窗列表布局()
      变量 悬浮窗列表布局文本框3 为 文本框 = 悬浮窗列表布局3.取组件("文本框1")
      悬浮窗列表布局文本框3.内容 = 文件操作.取文件前缀名(悬浮窗集合3.取文本项目(索引))
      返回(悬浮窗列表布局3)
   结束 事件
   事件 悬浮窗下面列表3:项目被单击(索引 为 整数型)
      系统操作.延时(2000)
      音乐播放器1.置播放路径(悬浮窗集合3.取文本项目(索引),真)
   结束 事件
结束 方法

方法 悬浮球4()//镇楼音悬浮球
   变量 悬浮球布局4 为 组件容器 = 悬浮球布局()
   悬浮窗4.组件 = 悬浮球布局4
   变量 悬浮球控件4 为 圆形图片框 = 悬浮球布局4.取组件("圆形图片框1")
   事件 悬浮球控件4:被单击()
      悬浮窗4()
   结束 事件
   事件 悬浮球控件4:被长按()
      悬浮窗4.隐藏()
   结束 事件
   悬浮窗4.可否移动 = 真
   悬浮窗4.显示()
结束 方法

方法 悬浮窗4()//镇楼音悬浮窗
   变量 悬浮窗布局4 为 组件容器 = 悬浮窗布局()
   悬浮窗4.组件 = 悬浮窗布局4
   变量 悬浮窗左上角 为 圆形图片框 = 悬浮窗布局4.取组件("圆形图片框1")
   变量 悬浮窗右上角 为 圆形图片框 = 悬浮窗布局4.取组件("圆形图片框2")
   事件 悬浮窗左上角:被单击()
      悬浮球4()
   结束 事件
   事件 悬浮窗右上角:被单击()
      悬浮球4()
   结束 事件
   变量 悬浮窗中间文本4 为 文本框 = 悬浮窗布局4.取组件("文本框1")
   悬浮窗中间文本4.内容 = "镇楼音"
   变量 悬浮窗下面列表4 为 列表框 = 悬浮窗布局4.取组件("列表框1")
   变量 悬浮窗适配器4 为 适配器
   变量 悬浮窗集合4 为 集合 = 创建 集合()
   变量 镇楼音路径 为 文本型 = 存储卡操作.取存储卡路径() + "/Android/data/com.tencent.mobileqq/Tencent/QQfile_recv/"
   变量 镇楼音目录 为 文本型[] = 文件操作.取子文件列表(镇楼音路径,文件排序_时间排序,真)
   计次循环(镇楼音目录.长度, 计次)
      如果 镇楼音目录[计次].结尾为(".slk") 则
         悬浮窗集合4.添加项目(镇楼音目录[计次])
      结束 如果
   结束 循环
   悬浮窗适配器4 = 创建 适配器(悬浮窗集合4)
   悬浮窗下面列表4.置适配器(悬浮窗适配器4)
   事件 悬浮窗适配器4:加载项目(索引 为 整数型) 为 组件容器
      变量 悬浮窗列表布局4 为 组件容器 = 悬浮窗列表布局()
      变量 悬浮窗列表布局文本框4 为 文本框 = 悬浮窗列表布局4.取组件("文本框1")
      悬浮窗列表布局文本框4.内容 = 文件操作.取文件前缀名(悬浮窗集合4.取文本项目(索引))
      返回(悬浮窗列表布局4)
   结束 事件
   事件 悬浮窗下面列表4:项目被单击(索引 为 整数型)
      容错处理
         变量 镇楼音替换路径 为 文本型 = 存储卡路径 +  "/Android/data/com.tencent.mobileqq/Tencent/MobileQQ/%s/ptt/"
         变量 qq号码 为 文本型 = 文件操作.读入文本文件(存储卡操作.取存储卡路径() + "/Android/data/com.daoyin.zero/qq.ini")
         镇楼音替换路径 = 格式化文本(镇楼音替换路径,qq号码)
         变量 镇楼音替换路径_换 为 文本型[] = 文件操作.取子文件列表(镇楼音替换路径,文件排序_时间排序,假)
         文件操作.复制文件(悬浮窗集合4.取文本项目(索引),镇楼音替换路径_换[0])
         悬浮窗中间文本4.内容 = "可以了"
         变量 倒计时器4 为 倒计时器 = 创建 倒计时器(2000,1000)
         倒计时器4.开始倒计时()
         事件 倒计时器4:倒计时结束()
            悬浮窗中间文本4.内容 = "镇楼音"
         结束 事件
      俘获(异常)
         悬浮窗中间文本4.内容 = "失败了"
         变量 倒计时器4 为 倒计时器 = 创建 倒计时器(2000,1000)
         倒计时器4.开始倒计时()
         事件 倒计时器4:倒计时结束()
            悬浮窗中间文本4.内容 = "镇楼音"
         结束 事件
      结束 容错
   结束 事件
结束 方法

//以下为布局代码
布局 悬浮窗布局() = {
   相对布局,
   id=1,
   名称="相对布局1",
   填充颜色="#FF81AFD2",
   宽度="-1",
   边框圆角=20,
   边框宽度=10,
   边框颜色="#FF4C2333",
   高度="400"   {
      相对布局,
      id=2,
      名称="相对布局2",
      宽度="-1",
      背景颜色="#FF4C2333",
      高度="50"      {
         圆形图片框,
         id=3,
         位于父布局左边=真,
         名称="圆形图片框1",
         图片="R.drawable.icon",
         宽度="48",
         支持单击=真,
         水波纹效果=真,
         高度="-1"
      },
      {
         文本框,
         id=4,
         位于某组件右边=3,
         位于某组件左边=5,
         位于父布局中间=真,
         内容="文本框1",
         名称="文本框1",
         字体颜色="#FFFFFFFF",
         宽度="-1",
         重力属性=17,
         支持单击=真,
         水波纹效果=真,
         高度="-1"
      },
      {
         圆形图片框,
         id=5,
         位于父布局右边=真,
         名称="圆形图片框2",
         图片="R.drawable.icon",
         宽度="48",
         支持单击=真,
         水波纹效果=真,
         高度="-1"
      }
   },
   {
      列表框,
      id=6,
      位于某组件之下=2,
      名称="列表框1",
      宽度="-1",
      支持快速滚动=真,
      高度="-1"
   }
}

布局 悬浮球布局() = {
   圆形图片框,
   id=1,
   名称="圆形图片框1",
   图片="R.drawable.icon",
   宽度="48",
   支持单击=真,
   支持长按=真,
   水波纹效果=真,
   高度="48"
}

布局 悬浮窗列表布局() = {
   相对布局,
   id=1,
   名称="相对布局1",
   宽度="-1",
   高度="48"   {
      文本框,
      id=2,
      位于父布局中间=真,
      内容="内容",
      单行显示=真,
      名称="文本框1",
      省略显示=1,
      字体大小=18,
      宽度="-2",
      最大显示行数=1,
      高度="-2"
   },
}
/*
*右下角图标按钮代码结束
*/